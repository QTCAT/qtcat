% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/associationTest.R
\name{qtcatHit}
\alias{qtcatHit}
\title{Fitting Hierarchical Inference Testing}
\usage{
qtcatHit(pheno, geno, B = 50, p.samp1 = 0.35, nfolds = 5,
  lambda.opt = "lambda.1se", alpha = 1, gamma = seq(0.05, 0.99, by =
  0.01), max.p.esti = 1, mc.cores = 1, trace = FALSE, ...)
}
\arguments{
\item{pheno}{An object of class \code{\link{qtcatPheno}}.}

\item{geno}{An object of class \code{\link{qtcatGeno}}.}

\item{B}{A integer indicating the number of sample-splits.}

\item{p.samp1}{A value specifying the fraction of data used for the LASSO sample-split. 
The ANOVA sample-split is \code{1 - p.samp1}.}

\item{nfolds}{Number of folds (default is 5). See \code{\link[glmnet]{cv.glmnet}} for 
more details.}

\item{lambda.opt}{Criterion for optimum selection of cross validated lasso. Either 
"lambda.1se" (default) or "lambda.min". See
\code{\link[glmnet]{cv.glmnet}} for more details.}

\item{alpha}{A single value or a vector of values in the range of 0 to 1 for the elastic 
net mixing parameter. If more than one value are given, the best is selected during 
cross-validation.}

\item{gamma}{Vector of gamma-values used in significant estimation.}

\item{max.p.esti}{Maximum for computed p-values. All p-values above this value are set 
to one. Small \code{max.p.esti} values reduce computing time.}

\item{mc.cores}{Number of cores for parallelising. Theoretical maximum is
\code{'B'}. For details see \code{\link[parallel]{mclapply}}.}

\item{trace}{If \code{TRUE} it prints current status of the program.}

\item{...}{additional arguments for \code{\link[glmnet]{cv.glmnet}}.}
}
\description{
Hierarchical inference testing for phenotype-SNP association.
}
\examples{
# If you want to run the examples, use:
# example(qtcatHit, run.dontrun = TRUE)
\dontrun{
# files containing example data for SNP data and the phenotype
pfile <- system.file("extdata/phenodata.csv", package = "qtcat")
gfile <- system.file("extdata/snpdata.csv", package = "qtcat")
pdat <- read.csv(pfile, header = TRUE)
snp <- read.snpData(gfile, sep = ",")
clust <- qtcatClust(snp)
geno <- qtcatGeno(snp, clust)
pheno <- qtcatPheno(names = pdat[, 1],
                    pheno = pdat[, 2],
                    covariates = model.matrix(~ pdat[, 3]))

# fitting HIT
fitted <- qtcatHit(pheno, geno)
}

}

